Perfeito, L√≠dia! üß†üíª Bora fazer um compilad√£o monstro de c√≥digos e explica√ß√µes que vai te salvar nessa prova. Vou montar uma colet√¢nea de c√≥digos b√°sicos e completos em Flask + SQLite + login, explicando cada parte com carinho. Vai ter:

---

### üß∞ **1. INSTALA√á√ÉO DO FLASK E DEPEND√äNCIAS**

```bash
pip install flask
```

Se for usar SQLite (que j√° vem com Python), n√£o precisa instalar nada extra. Mas se quiser usar ORM com SQLAlchemy:

```bash
pip install flask_sqlalchemy
```

---

### üìÅ **2. ESTRUTURA DE PASTA B√ÅSICA**

```
projeto/
‚îú‚îÄ‚îÄ app.py
‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îî‚îÄ‚îÄ login.html
‚îú‚îÄ‚îÄ static/
‚îÇ   ‚îî‚îÄ‚îÄ estilo.css
```

---

### üöÄ **3. PRIMEIRO APP FLASK (basezona)**

```python
from flask import Flask

app = Flask(__name__)

@app.route('/')
def home():
    return 'Ol√°, Flask!'

if __name__ == '__main__':
    app.run(debug=True)
```

---

### üóÇÔ∏è **4. CONECTANDO COM SQLITE**

```python
import sqlite3

def criar_banco():
    conn = sqlite3.connect('banco.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS usuarios (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nome TEXT NOT NULL,
            email TEXT UNIQUE NOT NULL,
            senha TEXT NOT NULL
        )
    ''')
    conn.commit()
    conn.close()

criar_banco()
```

---

### üß† **5. FLASK COM FORMUL√ÅRIO E SALVANDO DADOS**

```python
from flask import Flask, render_template, request, redirect
import sqlite3

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('form.html')

@app.route('/salvar', methods=['POST'])
def salvar():
    nome = request.form['nome']
    email = request.form['email']
    senha = request.form['senha']

    conn = sqlite3.connect('banco.db')
    cursor = conn.cursor()
    cursor.execute('INSERT INTO usuarios (nome, email, senha) VALUES (?, ?, ?)', (nome, email, senha))
    conn.commit()
    conn.close()

    return redirect('/')

if __name__ == '__main__':
    app.run(debug=True)
```

üìù **form.html**

```html
<form action="/salvar" method="post">
  Nome: <input type="text" name="nome"><br>
  Email: <input type="email" name="email"><br>
  Senha: <input type="password" name="senha"><br>
  <input type="submit" value="Cadastrar">
</form>
```

---

### üîê **6. LOGIN SIMPLES (sem sess√£o ainda)**

```python
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        senha = request.form['senha']

        conn = sqlite3.connect('banco.db')
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM usuarios WHERE email = ? AND senha = ?', (email, senha))
        usuario = cursor.fetchone()
        conn.close()

        if usuario:
            return f'Bem-vindo, {usuario[1]}!'
        else:
            return 'Login inv√°lido!'

    return render_template('login.html')
```

üìù **login.html**

```html
<form method="post">
  Email: <input type="email" name="email"><br>
  Senha: <input type="password" name="senha"><br>
  <input type="submit" value="Entrar">
</form>
```

---

### üß†üîë **7. LOGIN COM SESS√ÉO**

```python
from flask import Flask, render_template, request, redirect, session

app = Flask(__name__)
app.secret_key = 'segredo-top'

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        senha = request.form['senha']

        conn = sqlite3.connect('banco.db')
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM usuarios WHERE email = ? AND senha = ?', (email, senha))
        usuario = cursor.fetchone()
        conn.close()

        if usuario:
            session['usuario'] = usuario[1]  # nome
            return redirect('/perfil')
        else:
            return 'Login inv√°lido!'
    
    return render_template('login.html')

@app.route('/perfil')
def perfil():
    if 'usuario' in session:
        return f'Bem-vindo ao seu perfil, {session["usuario"]}!'
    else:
        return redirect('/login')

@app.route('/logout')
def logout():
    session.pop('usuario', None)
    return redirect('/login')
```

---

### üß™ **8. DICA DE COMO TESTAR NO NAVEGADOR**

* Roda com `python app.py`
* Vai no navegador e acessa:
  `http://127.0.0.1:5000`

---

### üßº **9. LIMPEZA DE C√ìDIGO E MELHORIAS**

* Crie fun√ß√µes pra reusar conex√µes:

```python
def get_db():
    return sqlite3.connect('banco.db')
```

* Use `with` para evitar esquecer de fechar:

```python
with get_db() as conn:
    cursor = conn.cursor()
    ...
```

---

### üß± **10. EXTRA: USANDO SQLALCHEMY (ORM bonitinho)**

```python
from flask import Flask
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///banco.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

class Usuario(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    nome = db.Column(db.String(100))
    email = db.Column(db.String(100), unique=True)
    senha = db.Column(db.String(100))

with app.app_context():
    db.create_all()
